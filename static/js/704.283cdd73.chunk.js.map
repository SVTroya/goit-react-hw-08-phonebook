{"version":3,"file":"static/js/704.283cdd73.chunk.js","mappings":"iOAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,k2BA2CxBC,EAAeH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6YAwB3BG,EAAeL,EAAAA,GAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qL,uCCZvC,MApDA,WACE,IAAAK,GAAiEC,EAAAA,EAAAA,MAAzDC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAAoBC,EAAML,EAAnBM,UAAaD,OAC9CE,GAAWC,EAAAA,EAAAA,MAWjB,OACEC,EAAAA,EAAAA,MAACjB,EAAU,CAACkB,SAAUP,GAVxB,SAAkBQ,GAChBJ,GAASK,EAAAA,EAAAA,IAAcD,IACvBP,GACF,IAO+CS,SAAA,EAC3CJ,EAAAA,EAAAA,MAACb,EAAY,CAAAiB,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cACNC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMb,EAAS,OAAQ,CACnBc,SAAU,wBACVC,UAAW,CAAEC,MAAO,EAAGC,QAAS,gDAChC,IACFC,YAAY,oBACbf,EAAOgB,OAAQP,EAAAA,EAAAA,KAAChB,EAAY,CAAAe,SAAER,EAAOgB,KAAKF,cAE7CV,EAAAA,EAAAA,MAACb,EAAY,CAAAiB,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WACNC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEO,KAAK,SACDpB,EAAS,QAAS,CACpBc,SAAU,qBACVC,UAAW,CAAEC,MAAO,EAAGC,QAAS,iCAChC,IACFC,YAAY,iBACbf,EAAOkB,QAAST,EAAAA,EAAAA,KAAChB,EAAY,CAAAe,SAAER,EAAOkB,MAAMJ,cAE/CV,EAAAA,EAAAA,MAACb,EAAY,CAAAiB,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cACNC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEO,KAAK,YACDpB,EAAS,WAAY,CACvBc,SAAU,wBACVC,UAAW,CAAEC,MAAO,EAAGC,QAAS,gDAChC,IACFC,YAAY,oBACbf,EAAOmB,WAAYV,EAAAA,EAAAA,KAAChB,EAAY,CAAAe,SAAER,EAAOmB,SAASL,cAErDL,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASG,QAtC1B,SAAoBC,GAASA,EAANC,OACdC,MACT,EAoC+Cf,SAAC,eAGlD,C","sources":["pages/RegisterForm/RegisterForm.styled.jsx","pages/RegisterForm/RegisterForm.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const StyledForm = styled.form`\n  margin: 40px auto;\n  width: 100%;\n  max-width: 320px;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 30px 30px;\n  background-color: cornsilk;\n  font-size: 20px;\n  font-weight: 500;\n  border-radius: 8px;\n  box-shadow: inset 1px 1px 6px 3px #a8a190;\n  color: #004242;\n  border: 1px solid grey;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 6px;\n  }\n\n  button {\n    margin: 0 auto;\n    width: fit-content;\n    border-radius: 20px;\n    border: none;\n    background-color: #008080;\n    text-transform: uppercase;\n    padding: 8px 16px;\n    font-weight: 600;\n    color: white;\n    box-shadow: 0 0 3px 1px #a8a190;\n    cursor: pointer;\n\n    transition: background-color 0.3s ease-in-out;\n\n    &:hover, &:focus {\n      background-color: #005454;\n    }\n  }\n`\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 23px;\n  position: relative;\n  line-height: 1;\n  padding-bottom: 20px;\n\n  input {\n    margin-top: 2px;\n    height: 30px;\n    border-radius: 8px;\n    border: none;\n    padding: 2px 10px;\n    box-shadow: 0 0 3px 1px #a8a190;\n    font-size: 20px;\n\n    &:hover, &:focus {\n      outline: none;\n    }\n  }\n`\n\nexport const ErrorMessage = styled.span`\n  margin-top: 3px;\n  font-size: 14px;\n  color: red;\n  font-style: italic;\n  font-weight: 500;\n  line-height: 0.7;\n  position: absolute;\n  bottom: 4px;\n  left: 0;\n`\n","import { ErrorMessage, InputWrapper, StyledForm } from './RegisterForm.styled'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch } from 'react-redux'\nimport { registerThunk } from '../../redux/auth/operations'\n\nfunction RegisterForm() {\n  const { register, handleSubmit, reset, formState: { errors } } = useForm()\n  const dispatch = useDispatch()\n\n  function onSubmit(data) {\n    dispatch(registerThunk(data))\n    reset()\n  }\n\n  function handleClick({ target }) {\n    target.blur()\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <InputWrapper>\n        <span>Username</span>\n        <input\n          {...register('name', {\n            required: 'Username is required!',\n            minLength: { value: 6, message: 'Username must be at least 6 symbols long!' }\n          })}\n          placeholder='Enter username' />\n        {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n      </InputWrapper>\n      <InputWrapper>\n        <span>Email</span>\n        <input\n          type='email'\n          {...register('email', {\n            required: 'Email is required!',\n            minLength: { value: 9, message: 'Email number is too short!' }\n          })}\n          placeholder='Enter email' />\n        {errors.email && <ErrorMessage>{errors.email.message}</ErrorMessage>}\n      </InputWrapper>\n      <InputWrapper>\n        <span>Password</span>\n        <input\n          type='password'\n          {...register('password', {\n            required: 'Password is required!',\n            minLength: { value: 7, message: 'Password must be at least 7 symbols long!' }\n          })}\n          placeholder='Enter password' />\n        {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n      </InputWrapper>\n      <button type='submit' onClick={handleClick}>Register</button>\n    </StyledForm>\n  )\n}\n\nexport default RegisterForm\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","InputWrapper","_templateObject2","ErrorMessage","_templateObject3","_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsxs","onSubmit","data","registerThunk","children","_jsx","_objectSpread","required","minLength","value","message","placeholder","name","type","email","password","onClick","_ref","target","blur"],"sourceRoot":""}