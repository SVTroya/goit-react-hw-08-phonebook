{"version":3,"file":"static/js/52.d4f74622.chunk.js","mappings":"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","sources":["components/NewContactForm/NewContactForm.styled.jsx","redux/contactsBook/selectors.js","components/NewContactForm/NewContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ListOfContacts/ListOfContacts.styled.jsx","components/Filter/FilterInputStyled.jsx","components/Filter/Filter.jsx","components/ListOfContacts/ListOfContacts.jsx","pages/ContactsBook/ContactsBook.styled.jsx","pages/ContactsBook/ContactsBook.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const FormContainer = styled.section`\n  width: 100%;\n  background-color: #008080;\n  border-radius: 20px;\n  box-shadow: 2px 2px 6px 2px gray;\n\n  @media only screen and (min-width: 1158px) {\n    width: 50%;\n  }\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 30px 30px 40px;\n\n  padding: 30px 30px;\n  background-color: cornsilk;\n  font-size: 20px;\n  font-weight: 500;\n  border-radius: 12px;\n  box-shadow: inset 1px 1px 6px 3px #a8a190;\n  color: #004242;\n  border: 1px solid grey;\n\n  @media only screen and (min-width: 1158px) {\n    margin: 60px;\n  }\n\n  button {\n    margin-top: 10px;\n    width: fit-content;\n    border-radius: 20px;\n    border: none;\n    background-color: #008080;\n    text-transform: uppercase;\n    padding: 8px 16px;\n    font-weight: 600;\n    color: white;\n    box-shadow: 0 0 3px 1px #a8a190;\n    cursor: pointer;\n\n    transition: background-color 0.3s ease-in-out;\n\n    &:hover, &:focus {\n      background-color: #005454;\n    }\n  }\n`\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 20px;\n  position: relative;\n  line-height: 1;\n  padding-bottom: 20px;\n\n  input {\n    margin-top: 2px;\n    height: 30px;\n    border-radius: 8px;\n    border: none;\n    padding: 2px 10px;\n    box-shadow: 0 0 3px 1px #a8a190;\n    font-size: 18px;\n\n    &:hover, &:focus {\n      outline: none;\n    }\n\n    @media only screen and (min-width: 768px) {\n      font-size: 23px;\n\n      input {\n        font-size: 20px;\n      }\n    }\n  }\n`\n\nexport const ErrorMessage = styled.span`\n  margin-top: 3px;\n  font-size: 14px;\n  color: red;\n  font-style: italic;\n  font-weight: 500;\n  line-height: 0.7;\n  position: absolute;\n  bottom: 4px;\n  left: 0;\n`\n","import { createSelector } from '@reduxjs/toolkit'\n\nexport function selectContacts(state) {\n  return state.contactsBook.contacts.items\n}\n\nexport function selectIsLoading(state) {\n  return state.contactsBook.contacts.isLoading\n}\n\nexport function selectError(state) {\n  return state.contactsBook.contacts.error\n}\n\nexport function selectFilterValue(state) {\n  return state.contactsBook.filter\n}\n\nexport const selectVisibleContacts = createSelector([selectContacts, selectFilterValue], (contacts, filterValue) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase()))\n})\n","import { ErrorMessage, Form, FormContainer, InputWrapper } from './NewContactForm.styled'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectContacts } from '../../redux/contactsBook/selectors'\nimport { useForm } from 'react-hook-form'\nimport { toast } from 'react-toastify'\nimport { addContactThunk } from '../../redux/contactsBook/operations'\n\nexport function NewContactForm() {\n  const contacts = useSelector(selectContacts)\n  const dispatch = useDispatch()\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm()\n\n  function onSubmit(data) {\n    if (contacts.some(({ name }) => {\n      return name === data.name\n    })\n    ) {\n      toast.warn(`${data.name} is already in contacts!`)\n      return\n    }\n    dispatch(addContactThunk(data))\n    reset()\n  }\n\n  function handleClick({ target }) {\n    target.blur()\n  }\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <InputWrapper>\n          <span>Full Name</span>\n          <input\n            {...register('name', {\n              required: 'Name is required!',\n              minLength: { value: 2, message: 'Name must be at least 2 symbols long!' }\n            })}\n            placeholder='Enter name' />\n          {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n        </InputWrapper>\n        <InputWrapper>\n          <span>Phone number</span>\n          <input\n            type='tel'\n            {...register('number', {\n              required: 'Phone number is required!',\n              minLength: { value: 9, message: 'Phone number is too short!' }\n            })}\n            placeholder='Enter phone number' />\n          {errors.number && <ErrorMessage>{errors.number.message}</ErrorMessage>}\n        </InputWrapper>\n        <button type='submit' onClick={handleClick}>Add contact</button>\n      </Form>\n    </FormContainer>\n  )\n}\n","import styled from 'styled-components';\n\nexport const ContactWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`\n\nexport const RightWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media only screen and (min-width: 768px) {\n    margin-left: auto;\n  }\n\n`\n\nexport const Name = styled.span`\n  color: #004242;\n  font-weight: 400;\n  font-family: 'Dancing Script', cursive;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    margin: 0;\n  }\n`;\n\nexport const Phone = styled.span`\n  color: #004242;\n  font-style: italic;\n  font-size: 24px;\n  padding-top: 3px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  transition: color .25s ease-in-out;\n\n  @media only screen and (min-width: 768px) {\n    margin-left: 10px;\n  }\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { ContactWrapper, IconWrapper, Name, Phone, RightWrapper } from './Contact.styled'\nimport PropTypes from 'prop-types'\nimport { ImBin } from 'react-icons/im'\nimport { useDispatch } from 'react-redux'\nimport { removeContactThunk } from '../../redux/contactsBook/operations'\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  })\n}\n\nexport function Contact({ contact: { id, name, number } }) {\n  const dispatch = useDispatch()\n\n  function handleRemoveContact(id) {\n    dispatch(removeContactThunk(id))\n  }\n\n  return (\n    <ContactWrapper>\n      <Name>{name}</Name>\n      <RightWrapper>\n        <Phone>tel.: {number}</Phone>\n        <IconWrapper>\n          <ImBin size={20} onClick={() => handleRemoveContact(id)} />\n        </IconWrapper>\n      </RightWrapper>\n    </ContactWrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ListContainer = styled.section`\n  width: 100%;\n  /*height: 800px;*/\n  background-color: #008080;\n  border-radius: 20px;\n  box-shadow: 2px 2px 6px 2px gray;\n  display: flex;\n\n  @media only screen and (min-width: 1158px) {\n    width: 50%;\n  }\n\n  h3 {\n    display: inline;\n    font-weight: 500;\n  }\n\n  ul {\n    margin-top: 5px;\n    margin-left: 4px;\n    width: 100%;\n    padding: 30px 5px 0 0;\n    line-height: 1.24;\n  }\n\n  @media only screen and (min-width: 768px) {\n    ul {\n      margin-top: 7px;\n      line-height: 1.16;\n    }\n  }\n`\nexport const BackgroundContainer = styled.div`\n  background-color: cornsilk;\n  display: flex;\n  margin: 40px 30px 30px;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 10px 0;\n  box-shadow: inset 1px 1px 6px 3px #a8a190;\n\n  @media only screen and (min-width: 1158px) {\n    margin: 30px 30px 30px 50px;\n  }\n`\n\nexport const ListWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-image: repeating-linear-gradient(0deg, #999999, #999999 3px, transparent 3px, transparent);\n  background-size: 50px 35px;\n  padding: 0 10px;\n\n  @media only screen and (min-width: 768px) {\n    padding: 0 10px 0 60px;\n\n    &::before{\n      position: absolute;\n      content: '';\n      width: 3px;\n      height: calc(100% + 20px);\n      top: -10px;\n      background-color: #999999;\n    }\n  }\n`\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  margin-top: -6px;\n  align-items: center;\n  flex-direction: column;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    margin-left: 4px;\n    margin-top: -7px;\n    gap: 20px;\n  }\n`\n","import styled from 'styled-components';\n\nexport const FilterInputStyled = styled.input`\n  display: inline;\n  max-width: 250px;\n  width: 100%;\n  border: none;\n  padding: 6px 10px;\n  box-shadow: inset 1px 1px 3px 1px gray;\n  font-size: 18px;\n  border-radius: 2px;\n  margin-right: 5px;\n\n  &:hover, &:focus {\n    outline: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 6px 10px;\n  }\n`;\n","import { FilterInputStyled } from './FilterInputStyled';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectFilterValue } from '../../redux/contactsBook/selectors'\nimport { setFilterValue } from '../../redux/contactsBook/slice'\n\nexport function Filter() {\n  const filterValue = useSelector(selectFilterValue)\n  const dispatch = useDispatch()\n\n  return (\n    <FilterInputStyled\n      type='text'\n      name='filter'\n      id={crypto.randomUUID()}\n      value={filterValue}\n      placeholder='Find conacts by name'\n      onChange={({ target }) => dispatch(setFilterValue(target.value))} />\n  );\n}\n","import { Contact } from '../Contact/Contact'\nimport { BackgroundContainer, HeaderContainer, ListContainer, ListWrapper } from './ListOfContacts.styled'\nimport { Filter } from '../Filter/Filter'\nimport { useSelector } from 'react-redux'\nimport { selectVisibleContacts } from '../../redux/contactsBook/selectors'\n\nexport function ListOfContacts() {\n  const contacts = useSelector(selectVisibleContacts)\n\n  return (\n    <ListContainer>\n      <BackgroundContainer>\n        <ListWrapper>\n        <HeaderContainer><h3>Contacts</h3>\n          <Filter />\n        </HeaderContainer>\n        {contacts.length > 0 && <ul>\n          {contacts.map(contact => (\n             <Contact key={contact.id} contact={contact} />\n          ))}\n        </ul>}\n      </ListWrapper>\n      </BackgroundContainer>\n    </ListContainer>\n  )\n}\n","import binder_ring from '../../images/binder_ring.webp'\nimport binder_ring_v from '../../images/binder_ring_v.webp'\n\nimport styled from 'styled-components';\n\nexport const ContactsBookContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  font-size: 30px;\n  color: #010101;\n  flex-grow: 1;\n  flex-direction: column;\n\n  @media only screen and (min-width: 1158px) {\n    flex-direction: row;\n  }\n`;\n\nexport const BinderRings = styled.div`\n  width: calc(100% - 100px);\n  height: 100px;\n  margin: -40px 60px;\n  background-image: url(\"${binder_ring_v}\");\n  background-position: left;\n  background-repeat: round no-repeat;\n  z-index: 10;\n  background-size: 40px 90px;\n\n  @media only screen and (min-width: 1158px) {\n    width: 100px;\n    height: calc(100% - 100px);\n    margin: 60px -40px;\n    background-image: url(\"${binder_ring}\");\n    background-position: top;\n    background-repeat: no-repeat round;\n    z-index: 10;\n    background-size: 90px 40px;\n  }\n`\n","import { NewContactForm } from '../../components/NewContactForm/NewContactForm'\nimport { ListOfContacts } from '../../components/ListOfContacts/ListOfContacts'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { fetchContactsThunk } from '../../redux/contactsBook/operations'\nimport { selectError, selectIsLoading } from '../../redux/contactsBook/selectors'\nimport { FadeLoader } from 'react-spinners'\nimport { BinderRings, ContactsBookContainer } from './ContactsBook.styled'\n\nfunction ContactsBook() {\n  const isLoading = useSelector(selectIsLoading)\n  const error = useSelector(selectError)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk())\n  }, [dispatch])\n\n  useEffect(() => {\n    error && toast.warn(error)\n  }, [error])\n\n  const override = {\n    display: 'block',\n    margin: '0 auto',\n    borderColor: 'red',\n    position: 'fixed',\n    inset: '50%'\n  }\n\n  return (\n    <>\n      <ContactsBookContainer>\n        <NewContactForm />\n        <BinderRings />\n        <ListOfContacts />\n        <FadeLoader\n          loading={isLoading}\n          cssOverride={override}\n          aria-label='Loading Spinner'\n          data-testid='loader'\n          color='#799a86' />\n      </ContactsBookContainer>\n    </>\n  )\n}\n\nexport default ContactsBook\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","InputWrapper","_templateObject3","ErrorMessage","_templateObject4","selectContacts","state","contactsBook","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","filterValue","contact","name","toLowerCase","includes","NewContactForm","useSelector","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","_jsx","children","_jsxs","onSubmit","data","some","_ref","toast","concat","addContactThunk","_objectSpread","required","minLength","value","message","placeholder","type","number","onClick","_ref2","target","blur","ContactWrapper","RightWrapper","Name","Phone","IconWrapper","_templateObject5","Contact","_ref$contact","id","ImBin","size","removeContactThunk","handleRemoveContact","ListContainer","BackgroundContainer","ListWrapper","HeaderContainer","FilterInputStyled","Filter","crypto","randomUUID","onChange","setFilterValue","ListOfContacts","length","map","ContactsBookContainer","BinderRings","binder_ring_v","binder_ring","useEffect","fetchContactsThunk","_Fragment","FadeLoader","loading","cssOverride","display","margin","borderColor","position","inset","color"],"sourceRoot":""}